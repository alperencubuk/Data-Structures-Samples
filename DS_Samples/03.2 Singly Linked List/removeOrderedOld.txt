
void SinglyLinkedList::removeOrdered(const string& e, const int& i)		// current silinir  
{
	// Liste bos mu?
	if (empty())
	{
		cout << "List is empty !" << endl;
		return;
	}

	// Listenin ilk elemani mi silinecek?
	if ((e.compare(head->elem) == 0) && (head->score == i))
	{
		SinglyNode* temp = head;
		head = head->next;
		delete temp;
		return;
	}

	SinglyNode* previous = head;
	SinglyNode* current = head->next;

	while (current != NULL)
	{
		if ((e.compare(current->elem) == 0) && (current->score == i))
		{
			previous->next = current->next;
			delete current;						
			return;
		}

		previous = current;
		current = current->next;
	}

	if (current == NULL) cout << "\n" << e << " is not found" << endl;
}